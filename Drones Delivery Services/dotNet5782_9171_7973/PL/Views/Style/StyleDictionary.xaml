<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:syncfusion="http://schemas.syncfusion.com/wpf">

    <Style x:Key="Container" TargetType="StackPanel">
        <Setter Property="Margin" Value="30" />
    </Style>

    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Margin" Value="0,0,30,30" />
        <Setter Property="Foreground" Value="Gray" />
    </Style>


    <Style x:Key="DroneHeader" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Foreground" Value="Gray" />
    </Style>

    <Style x:Key="RegisterHeader" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Margin" Value="10,35" />
        <Setter Property="Foreground" Value="Gray" />
    </Style>

    <Style x:Key="Text" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Foreground" Value="DarkGray" />
    </Style>

    <Style x:Key="Icon" TargetType="{x:Type materialDesign:PackIcon}">
    </Style>
    
    <Style x:Key="InsideIcon" TargetType="{x:Type materialDesign:PackIcon}">
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <Style TargetType="{x:Type syncfusion:SfTextInputLayout}">
        <Setter Property="Margin" Value="30,10,30,10" />
        <Setter Property="MaxWidth" Value="1500" />
    </Style>


    <Style TargetType="Button">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="50"/>
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" x:Name="Border">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,5"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#DDDDDD" />
                            <Setter Property="BorderThickness" Value="1,1,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#F2F2F2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PrimaryButton">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="50"/>
        <Setter Property="Background" Value="#0179ff"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" x:Name="Border">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,5"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#0893ff" />
                            <Setter Property="BorderThickness" Value="1,1,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="95,30,0,0"/>
        <Setter Property="Width" Value="150"/>
    </Style>

    <Style x:Key="MainButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="150" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,40,0,0" />
    </Style>

    <Style TargetType="Button" x:Key="LinkButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="#0179ff"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#0893ff" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>